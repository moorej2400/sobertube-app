# Shared location configurations for WebSocket cluster
# Included by both HTTP and HTTPS server blocks

# Security headers
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "no-referrer-when-downgrade" always;
add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'" always;

# Connection limits
limit_conn conn_limit_per_ip 20;

# WebSocket proxy configuration
location /socket.io/ {
    # Rate limiting for WebSocket connections
    limit_req zone=websocket_limit burst=20 nodelay;
    
    # Proxy configuration
    proxy_pass http://websocket_backend;
    
    # WebSocket upgrade headers
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    # Preserve client information
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Connection timeouts
    proxy_connect_timeout 5s;
    proxy_send_timeout 60s;
    proxy_read_timeout 300s;
    
    # Buffer configuration
    proxy_buffering off;
    proxy_cache off;
    
    # Handle connection drops
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 3;
    proxy_next_upstream_timeout 10s;
}

# API endpoints proxy
location /api/ {
    # Rate limiting for API calls
    limit_req zone=api_limit burst=50 nodelay;
    
    # Proxy to backend servers
    proxy_pass http://websocket_backend;
    
    # Standard proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts for API calls
    proxy_connect_timeout 5s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Error handling
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 2;
    proxy_next_upstream_timeout 5s;
}

# Health check endpoint
location /health {
    proxy_pass http://websocket_backend/health;
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Quick timeout for health checks
    proxy_connect_timeout 2s;
    proxy_send_timeout 5s;
    proxy_read_timeout 5s;
    
    # Don't retry failed health checks
    proxy_next_upstream off;
}

# Cluster metrics endpoint (for monitoring)
location /cluster/metrics {
    proxy_pass http://websocket_backend/cluster/metrics;
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Restrict access (optional - implement authentication)
    # allow 127.0.0.1;
    # allow 10.0.0.0/8;
    # deny all;
}

# Frontend static files (if served through same domain)
location / {
    # Try to serve frontend files, fallback to index.html for SPA
    root /usr/share/nginx/html;
    try_files $uri $uri/ /index.html;
    
    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# Error pages
error_page 404 /404.html;
error_page 500 502 503 504 /50x.html;

location = /50x.html {
    root /usr/share/nginx/html;
}